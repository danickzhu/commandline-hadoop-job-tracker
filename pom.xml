<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.paypal.risk</groupId>
	<artifactId>hjt</artifactId>
	<version>0.3-SNAPSHOT</version>
	<name>${project.artifactId}</name>
	<description>Tracking the data of job tracker and display on terminal</description>

	<properties>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
		<encoding>UTF-8</encoding>
		<scala.version>2.11.2</scala.version>
		<scala.binary.version>2.11</scala.binary.version>
		<jsoup.version>1.7.3</jsoup.version>
		<slf4j.version>1.7.5</slf4j.version>
		<log4j.version>1.2.17</log4j.version>
		<scala.macros.version>2.0.1</scala.macros.version>
		<PermGen>64m</PermGen>
		<MaxPermGen>512m</MaxPermGen>
	</properties>

	<repositories>
		<repository>
			<id>central</id>
			<!-- This should be at top, it makes maven try the central repo first
				and then others and hence faster dep resolution -->
			<name>Maven Repository</name>
			<url>https://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>apache-repo</id>
			<name>Apache Repository</name>
			<url>https://repository.apache.org/content/repositories/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>jboss-repo</id>
			<name>JBoss Repository</name>
			<url>https://repository.jboss.org/nexus/content/repositories/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>mqtt-repo</id>
			<name>MQTT Repository</name>
			<url>https://repo.eclipse.org/content/repositories/paho-releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>cloudera-repo</id>
			<name>Cloudera Repository</name>
			<url>https://repository.cloudera.com/artifactory/cloudera-repos</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>mapr-repo</id>
			<name>MapR Repository</name>
			<url>http://repository.mapr.com/maven</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-releases</id>
			<name>Spring Release Repository</name>
			<url>https://repo.spring.io/libs-release</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>scala-tools.org</id>
			<name>Scala-Tools Maven2 Repository</name>
			<url>http://scala-tools.org/repo-releases</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>scala-tools.org</id>
			<name>Scala-Tools Maven2 Repository</name>
			<url> https://oss.sonatype.org/content/groups/scala-tools/</url>
		</pluginRepository>
	</pluginRepositories>
	<!-- -->

	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-xml</artifactId>
			<version>2.11.0-M4</version>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.binary.version}</artifactId>
			<version>2.2.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- jsoup HTML parser library @ http://jsoup.org/ -->
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20140107</version>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> <groupId>org.scala-tools.testing</groupId> <artifactId>specs_${scala.version}</artifactId>
			<version>1.6.9</version> <scope>test</scope> </dependency> -->
		<!-- <dependency> <groupId>org.scalatest</groupId> <artifactId>scalatest_2.11</artifactId>
			<version>2.2.1</version> <scope>test</scope> </dependency> -->
	</dependencies>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-test-compile-first</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
					<execution>
						<id>attach-scaladocs</id>
						<phase>verify</phase>
						<goals>
							<goal>doc-jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<scalaVersion>${scala.version}</scalaVersion>
					<recompileMode>incremental</recompileMode>
					<useZincServer>true</useZincServer>
					<args>
						<arg>-unchecked</arg>
						<arg>-deprecation</arg>
						<arg>-feature</arg>
					</args>
					<jvmArgs>
						<jvmArg>-Xms512m</jvmArg>
						<jvmArg>-Xmx1024m</jvmArg>
						<jvmArg>-XX:PermSize=${PermGen}</jvmArg>
						<jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>
					</jvmArgs>
					<javacArgs>
						<javacArg>-source</javacArg>
						<javacArg>${java.version}</javacArg>
						<javacArg>-target</javacArg>
						<javacArg>${java.version}</javacArg>
					</javacArgs>
					<!-- The following plugin is required to use quasiquotes in Scala 2.10
						and is used by Spark SQL for code generation. -->
					<compilerPlugins>
						<compilerPlugin>
							<groupId>org.scalamacros</groupId>
							<artifactId>paradise_${scala.version}</artifactId>
							<version>${scala.macros.version}</version>
						</compilerPlugin>
					</compilerPlugins>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.17</version>
				<configuration>
					<!-- Uses scalatest instead -->
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>SparkTestSuite.txt</filereports>
					<argLine>-Xmx1g -XX:ReservedCodeCacheSize=512m</argLine>
					<stderr />
					<systemProperties>
						<java.awt.headless>true</java.awt.headless>
						<spark.test.home>${session.executionRootDirectory}</spark.test.home>
						<spark.testing>1</spark.testing>
						<spark.ui.enabled>false</spark.ui.enabled>
						<spark.ui.showConsoleProgress>false</spark.ui.showConsoleProgress>
						<spark.executor.extraClassPath>${test_classpath}</spark.executor.extraClassPath>
						<spark.driver.allowMultipleContexts>true</spark.driver.allowMultipleContexts>
					</systemProperties>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
